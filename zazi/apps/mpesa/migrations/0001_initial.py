# Generated by Django 3.0.4 on 2020-03-29 09:35

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import zazi.core.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('banking', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MpesaAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('account_type', models.PositiveSmallIntegerField(choices=[(1, 'B2C_BULK_PAYMENTS_ACCOUNT'), (2, 'C2B_PAYBILL_ACCOUNT'), (3, 'PERSONAL_MPESA_ACCOUNT'), (4, 'AGENCY_MPESA_ACCOUNT')], null=True)),
                ('identifier_type', models.PositiveSmallIntegerField(choices=[(1, 'PERSONAL_MPESA'), (2, 'BUSINESS_LIPA_NA_MPESA'), (4, 'BUSINESS_PAYBILL')])),
                ('identifier', models.CharField(max_length=20)),
                ('account_id', models.CharField(default=zazi.core.utils.generate_id, max_length=30, unique=True)),
                ('is_active', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'mpesa_account',
            },
        ),
        migrations.CreateModel(
            name='MpesaTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('transaction_id', models.CharField(max_length=50, null=True)),
                ('command_id', models.CharField(choices=[('TransactionReversal', 'UTILITY_TRANSACTION_REVERSAL'), ('AccountBalance', 'UTILITY_ACCOUNT_BALANCE'), ('TransactionStatusQuery', 'UTILITY_TRANSACTION_STATUS_QUERY'), ('CheckIdentity', 'UTILITY_CHECK_IDENTITY'), ('BusinessPayBill', 'B2B_BUSINESS_PAYBILL'), ('BusinessBuyGoods', 'B2B_BUSINESS_BUY_GOODS'), ('DisburseFundsToBusiness', 'B2B_DISBURSE_FUNDS_TO_BUSINESS'), ('BusinessToBusinessTransfer', 'B2B_BUSINESS_TO_BUSINESS_TRANSFER'), ('BusinessTransferFromMMFToUtility', 'B2B_BUSINESS_TRANSFER_FROM_MMF_TO_UTILITY'), ('BusinessTransferFromUtilityToMMF', 'B2B_BUSINESS_TRANSFER_FROM_UTILITY_TO_MMF'), ('MerchantToMerchantTransfer', 'B2B_MERCHANT_TO_MERCHANT_TRANSFER'), ('MerchantTransferFromMerchantToWorking', 'B2B_MERCHANT_TRANSFER_FROM_MERCHANT_TO_WORKING'), ('MerchantServicesMMFAccountTransfer', 'B2B_MERCHANT_SERVICES_MMF_ACCOUNT_TRANSFER'), ('AgencyFloatAdvance', 'B2B_AGENCY_FLOAT_ADVANCE'), ('SalaryPayment', 'B2C_SALARY_PAYMENT'), ('BusinessPayment', 'B2C_BUSINESS_PAYMENT'), ('PromotionPayment', 'B2C_PROMOTION_PAYMENT'), ('CustomerPayBillOnline', 'C2B_PAYBILL'), ('CustomerBuyGoodsOnline', 'C2B_TILL_NUMBER')], max_length=40)),
                ('transaction_category', models.PositiveSmallIntegerField(choices=[(1, 'LOAN_TRANSACTION'), (2, 'IDENTITY_VERIFICATION')], null=True)),
                ('mpesa_receipt_number', models.CharField(default=zazi.core.utils.generate_id, max_length=50, null=True)),
                ('initiator', models.CharField(max_length=100, null=True)),
                ('initiated_at', models.DateTimeField(editable=False, null=True)),
                ('billref_number', models.CharField(max_length=50, null=True)),
                ('invoice_number', models.CharField(max_length=50, null=True)),
                ('transaction_time', models.CharField(editable=False, max_length=50, null=True)),
                ('transaction_amount', models.DecimalField(decimal_places=2, max_digits=18, null=True)),
                ('transaction_charge', models.DecimalField(decimal_places=2, max_digits=18, null=True)),
                ('b2c_utility_balance', models.DecimalField(decimal_places=2, max_digits=18, null=True)),
                ('b2c_working_account_balance', models.DecimalField(decimal_places=2, max_digits=18, null=True)),
                ('result_code', models.PositiveSmallIntegerField(choices=[(0, 'success'), (1, 'insufficient_funds'), (2, 'less_than_minimum_transaction_value'), (3, 'more_than_maximum_transaction_value'), (4, 'would_exceed_daily_transfer_limit'), (5, 'would_exceed_minimum_balance'), (6, 'unresolved_primary_party'), (7, 'unresolved_receiver_party'), (8, 'would_exceed_maxiumum_balance'), (11, 'debit_account_invalid'), (12, 'credit_account_invalid'), (13, 'unresolved_debit_account'), (14, 'unresolved_credit_account'), (15, 'duplicate_detected'), (17, 'internal_failure'), (20, 'unresolved_initiator'), (26, 'traffic_blocking_condition_in_place'), (1032, 'stk_cancelled_by_user')], null=True)),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'PENDING'), (1, 'COMPLETED'), (2, 'CANCELLED'), (3, 'FAILED')], null=True)),
                ('request_payload', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('response_payload', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('recipient_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='receiving_transactions', to='mpesa.MpesaAccount')),
                ('sender_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='initiated_transactions', to='mpesa.MpesaAccount')),
            ],
            options={
                'db_table': 'mpesa_transaction',
            },
        ),
        migrations.CreateModel(
            name='MpesaOrganization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('organization_id', models.CharField(default=zazi.core.utils.generate_id, max_length=100)),
                ('owner', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'mpesa_organization',
            },
        ),
        migrations.CreateModel(
            name='MpesaAccountRegisteredURL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference', models.CharField(default=zazi.core.utils.generate_id, max_length=30)),
                ('response_type', models.CharField(max_length=15)),
                ('confirmation_url', models.URLField()),
                ('validation_url', models.URLField()),
                ('request_payload', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('response_payload', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('mpesa_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mpesa_registed_urls', to='mpesa.MpesaAccount')),
            ],
            options={
                'db_table': 'mpesa_account_registered_url',
            },
        ),
        migrations.CreateModel(
            name='MpesaAccountBalance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('request_id', models.CharField(max_length=50, null=True)),
                ('balance_requested_at', models.DateTimeField(null=True)),
                ('balance_updated_at', models.DateTimeField(null=True)),
                ('status', models.PositiveIntegerField(choices=[(0, 'Pending'), (1, 'Successful'), (2, 'Failed')], null=True)),
                ('request_payload', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('response_payload', django.contrib.postgres.fields.jsonb.JSONField(null=True)),
                ('mpesa_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='account_balances', to='mpesa.MpesaAccount')),
            ],
            options={
                'db_table': 'mpesa_account_balance',
            },
        ),
        migrations.AddField(
            model_name='mpesaaccount',
            name='organization',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mpesa.MpesaOrganization'),
        ),
        migrations.CreateModel(
            name='LipaNaMpesaAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('pass_code', models.CharField(blank=True, max_length=70, null=True)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lipa_na_mpesa_accounts', to='mpesa.MpesaAccount')),
            ],
            options={
                'db_table': 'lipa_na_mpesa_account',
            },
        ),
        migrations.CreateModel(
            name='MpesaBankAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bank_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_mpesa_accounts', to='banking.BankAccount')),
                ('mpesa_account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='linked_bank_accounts', to='mpesa.MpesaAccount')),
            ],
            options={
                'db_table': 'mpesa_bank_account',
                'unique_together': {('mpesa_account', 'bank_account')},
            },
        ),
        migrations.CreateModel(
            name='MpesaAPIAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('in_production', models.BooleanField(default=False)),
                ('consumer_key', models.CharField(max_length=40)),
                ('consumer_secret', models.CharField(max_length=20)),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('security_credential', models.CharField(blank=True, max_length=30, null=True)),
                ('user_type', models.PositiveSmallIntegerField(choices=[(1, 'BUSINESS_ADMINISTRATOR'), (2, 'BUSINESS_MANAGER'), (3, 'ORG_API_OPERATOR')], null=True)),
                ('linked_account', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_account', to='mpesa.MpesaAccount')),
                ('organization', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='mpesa.MpesaOrganization')),
            ],
            options={
                'db_table': 'mpesa_api_account',
                'unique_together': {('consumer_key', 'consumer_secret')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='mpesaaccount',
            unique_together={('organization', 'identifier_type', 'identifier')},
        ),
    ]
